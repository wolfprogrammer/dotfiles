/*--------------------------------------------------------------
                main.c
  
PIC16F877A 4MHZ Clock

Caio Rodrigues Soares Silva

--------------------------------------------------------------*/


/* Processador de arquivo de cabeçalho */

#define clock4mhz
#define __16f877a

#include "pic16f877a.h"
#include "commdefs.h"
#include "delay.h"
//#include "adc.h"


typedef unsigned int config;


config at 0x2007 __CONFIG= 
_WDT_OFF &		// Sem Watch dog timer 
_PWRTE_ON & 	// Com Power-On Reset
_BODEN_OFF &	// Com
_CP_OFF & 	    // Sem proteção do código
_DEBUG_OFF & 	// Sem debugger
_HS_OSC & 		// Oscilador cristal 4 MHZ
_CPD_OFF & 		//
_LVP_OFF; 		// Sem LVP:Low Voltage Programmming

// Canais do ADC já com a máscara de bits
#define CH0  0
#define CH1	 8
#define CH2	 16
#define CH3  24
#define CH4  32
#define CH5  40
#define CH6  48
#define CH7	 56





#define set_adc_channel(CH)	ADCON0|=(CH)

void set_adc();



void main(){

		CMCON=7;		  // Desabilita comparadores analógicos
		ADCON0=6;		  // Todas entradas analógicas desabilitadas
		INTCON=0;		  //Sem interrupção

		set_adc();	/* Configurações do iniciais do mcu*/


		TRISB=0x00;		// Os menos significativos da conversão estarão em PORTB ==> ADRESL
		TRISD=0x00;		// Os 2 bits mais significativos estarão em PORTD<0:1>	 ==> ADRESH

		PORTB=0X00;	
		TRISD=0X00;

		
		while(1){/*Loop Para sempre*/
        
				// Seleciona canal AN0, porto RA0
				ADCON0|=0x00;

				ADON=1; // Inicia conversão

				while(GO_DONE);  // Método mais simples possível 
								 // para testar a conversão a/dc
								 // 
								 // Polling ,espera-se a conversão terminar

				//Delay , espera mais um pouco 20*Tad=20*1us=20 us 20 ticks(1MHZ)
				delay1TCYx(20);


				/*  Mostra o resultado
				 *
				 *  MSB: PORTD1 RD1
				 *  LSB: PORTB0	RB0
				 *
				 *  */
				PORTB=ADRESL;
				PORTD=ADRESH;

			    

				}



} //end of main

/*----------------------------------------------------------*/


void set_adc(){

		/*		Configura para Fosc/2 isto é 4MHZ/4=1 MHZ
		 *
		 * 		Tad= 1us
		 *
		 *			Resultado A/D justificado a direita ,
		 *		bits mais siginificativos de ADRESH lidos como 0
		 *
		 *
		 *
		 * */

		ADCON0=0;	// Por sanidade desligar o módulo ADC
		ADCON1=0;

		ADFM=1;	// Resultado da conversão justificado a direita

		ADCS2=1; //Clock da conversão A/D FOSC/4 Tad=1us
		ADCS1=0;
		ADCS0=0;

		/*  
		  Configuração das portas do ADC
		 PCFG<3:0>=0101=0x05

Portos	 			RE2  RE1  RE0  RA5  RA3   RA2  RA1  RA0
Canais   			AN7  AN6  AN5  AN4  AN3   AN2  AN1  AN0
Configuração		 D	  D    D    D    Vref+ D    A    A
Direção I/O	TRIS	 0    0    0    0          0    1    1

		 Vref+ foi usado para se ter mais precião na conversão A/D

		 
		 		*/
		ADCON1 |= 0X05; 

		// Portas analógicas são entrada
		TRISA0=1;
		TRISA1=1;

			
}


/*------------------------------------------------------------------
 ---------------------  END OF FILE --------------------------------
 ------------------------------------------------------------------*/
