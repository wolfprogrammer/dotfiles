;--------------------------------------------------------
; File Created by SDCC : free open source ANSI-C Compiler
; Version 3.2.0 #8008 (Jul  6 2012) (Linux)
; This file was generated Thu Sep  6 21:22:13 2012
;--------------------------------------------------------
; PIC16 port for the Microchip 16-bit core micros
; * Extended Instruction Set
;--------------------------------------------------------
	list	p=18f4550
	__config 0x300000, 0xc0
	__config 0x300001, 0xc0
	__config 0x300002, 0x07
	__config 0x300003, 0xfe
	__config 0x300005, 0x7f
	__config 0x300006, 0x92
	__config 0x300008, 0xff
	__config 0x300009, 0xff
	__config 0x30000a, 0xff
	__config 0x30000b, 0xff
	__config 0x30000c, 0xff
	__config 0x30000d, 0xff

	radix dec

;--------------------------------------------------------
; public variables in this module
;--------------------------------------------------------
	global	_delay1s
	global	_uart_init
	global	_print
	global	_main

;--------------------------------------------------------
; extern variables in this module
;--------------------------------------------------------
	extern	__gptrget1
	extern	_SPPDATAbits
	extern	_SPPCFGbits
	extern	_SPPEPSbits
	extern	_SPPCONbits
	extern	_UFRMLbits
	extern	_UFRMHbits
	extern	_UIRbits
	extern	_UIEbits
	extern	_UEIRbits
	extern	_UEIEbits
	extern	_USTATbits
	extern	_UCONbits
	extern	_UADDRbits
	extern	_UCFGbits
	extern	_UEP0bits
	extern	_UEP1bits
	extern	_UEP2bits
	extern	_UEP3bits
	extern	_UEP4bits
	extern	_UEP5bits
	extern	_UEP6bits
	extern	_UEP7bits
	extern	_UEP8bits
	extern	_UEP9bits
	extern	_UEP10bits
	extern	_UEP11bits
	extern	_UEP12bits
	extern	_UEP13bits
	extern	_UEP14bits
	extern	_UEP15bits
	extern	_PORTAbits
	extern	_PORTBbits
	extern	_PORTCbits
	extern	_PORTDbits
	extern	_PORTEbits
	extern	_LATAbits
	extern	_LATBbits
	extern	_LATCbits
	extern	_LATDbits
	extern	_LATEbits
	extern	_TRISAbits
	extern	_TRISBbits
	extern	_TRISCbits
	extern	_TRISDbits
	extern	_TRISEbits
	extern	_OSCTUNEbits
	extern	_PIE1bits
	extern	_PIR1bits
	extern	_IPR1bits
	extern	_PIE2bits
	extern	_PIR2bits
	extern	_IPR2bits
	extern	_EECON1bits
	extern	_RCSTAbits
	extern	_TXSTAbits
	extern	_T3CONbits
	extern	_CMCONbits
	extern	_CVRCONbits
	extern	_ECCP1ASbits
	extern	_ECCP1DELbits
	extern	_BAUDCONbits
	extern	_CCP2CONbits
	extern	_CCP1CONbits
	extern	_ADCON2bits
	extern	_ADCON1bits
	extern	_ADCON0bits
	extern	_SSPCON2bits
	extern	_SSPCON1bits
	extern	_SSPSTATbits
	extern	_T2CONbits
	extern	_T1CONbits
	extern	_RCONbits
	extern	_WDTCONbits
	extern	_HLVDCONbits
	extern	_OSCCONbits
	extern	_T0CONbits
	extern	_STATUSbits
	extern	_FSR2Hbits
	extern	_BSRbits
	extern	_FSR1Hbits
	extern	_FSR0Hbits
	extern	_INTCON3bits
	extern	_INTCON2bits
	extern	_INTCONbits
	extern	_TBLPTRUbits
	extern	_PCLATHbits
	extern	_PCLATUbits
	extern	_STKPTRbits
	extern	_TOSUbits
	extern	_SPPDATA
	extern	_SPPCFG
	extern	_SPPEPS
	extern	_SPPCON
	extern	_UFRML
	extern	_UFRMH
	extern	_UIR
	extern	_UIE
	extern	_UEIR
	extern	_UEIE
	extern	_USTAT
	extern	_UCON
	extern	_UADDR
	extern	_UCFG
	extern	_UEP0
	extern	_UEP1
	extern	_UEP2
	extern	_UEP3
	extern	_UEP4
	extern	_UEP5
	extern	_UEP6
	extern	_UEP7
	extern	_UEP8
	extern	_UEP9
	extern	_UEP10
	extern	_UEP11
	extern	_UEP12
	extern	_UEP13
	extern	_UEP14
	extern	_UEP15
	extern	_PORTA
	extern	_PORTB
	extern	_PORTC
	extern	_PORTD
	extern	_PORTE
	extern	_LATA
	extern	_LATB
	extern	_LATC
	extern	_LATD
	extern	_LATE
	extern	_TRISA
	extern	_TRISB
	extern	_TRISC
	extern	_TRISD
	extern	_TRISE
	extern	_OSCTUNE
	extern	_PIE1
	extern	_PIR1
	extern	_IPR1
	extern	_PIE2
	extern	_PIR2
	extern	_IPR2
	extern	_EECON1
	extern	_EECON2
	extern	_EEDATA
	extern	_EEADR
	extern	_RCSTA
	extern	_TXSTA
	extern	_TXREG
	extern	_RCREG
	extern	_SPBRG
	extern	_SPBRGH
	extern	_T3CON
	extern	_TMR3L
	extern	_TMR3H
	extern	_CMCON
	extern	_CVRCON
	extern	_ECCP1AS
	extern	_ECCP1DEL
	extern	_BAUDCON
	extern	_CCP2CON
	extern	_CCPR2L
	extern	_CCPR2H
	extern	_CCP1CON
	extern	_CCPR1L
	extern	_CCPR1H
	extern	_ADCON2
	extern	_ADCON1
	extern	_ADCON0
	extern	_ADRESL
	extern	_ADRESH
	extern	_SSPCON2
	extern	_SSPCON1
	extern	_SSPSTAT
	extern	_SSPADD
	extern	_SSPBUF
	extern	_T2CON
	extern	_PR2
	extern	_TMR2
	extern	_T1CON
	extern	_TMR1L
	extern	_TMR1H
	extern	_RCON
	extern	_WDTCON
	extern	_HLVDCON
	extern	_OSCCON
	extern	_T0CON
	extern	_TMR0L
	extern	_TMR0H
	extern	_STATUS
	extern	_FSR2L
	extern	_FSR2H
	extern	_PLUSW2
	extern	_PREINC2
	extern	_POSTDEC2
	extern	_POSTINC2
	extern	_INDF2
	extern	_BSR
	extern	_FSR1L
	extern	_FSR1H
	extern	_PLUSW1
	extern	_PREINC1
	extern	_POSTDEC1
	extern	_POSTINC1
	extern	_INDF1
	extern	_WREG
	extern	_FSR0L
	extern	_FSR0H
	extern	_PLUSW0
	extern	_PREINC0
	extern	_POSTDEC0
	extern	_POSTINC0
	extern	_INDF0
	extern	_INTCON3
	extern	_INTCON2
	extern	_INTCON
	extern	_PRODL
	extern	_PRODH
	extern	_TABLAT
	extern	_TBLPTRL
	extern	_TBLPTRH
	extern	_TBLPTRU
	extern	_PCL
	extern	_PCLATH
	extern	_PCLATU
	extern	_STKPTR
	extern	_TOSL
	extern	_TOSH
	extern	_TOSU

;--------------------------------------------------------
;	Equates to used internal registers
;--------------------------------------------------------
STATUS	equ	0xfd8
FSR0L	equ	0xfe9
FSR1L	equ	0xfe1
FSR2L	equ	0xfd9
POSTDEC1	equ	0xfe5
PREINC1	equ	0xfe4
PLUSW2	equ	0xfdb
PRODL	equ	0xff3

;--------------------------------------------------------
; interrupt vector
;--------------------------------------------------------

;--------------------------------------------------------
; global & static initialisations
;--------------------------------------------------------
; I code from now on!
; ; Starting pCode block
S_main__main	code
_main:
;	.line	140; main.c	uart_init();
	CALL	_uart_init
;	.line	142; main.c	TRISD=0X00;  
	CLRF	_TRISD
;	.line	143; main.c	LATD=0XFF;
	MOVLW	0xff
	MOVWF	_LATD
_00123_DS_:
	clrwdt 
;	.line	154; main.c	print("Hola mundo!!!");
	MOVLW	UPPER(__str_0)
	MOVWF	0x02
	MOVLW	HIGH(__str_0)
	MOVWF	0x01
	MOVLW	LOW(__str_0)
	MOVWF	0x00
	MOVF	0x02, W
	MOVWF	POSTDEC1
	MOVF	0x01, W
	MOVWF	POSTDEC1
	MOVF	0x00, W
	MOVWF	POSTDEC1
	CALL	_print
	MOVLW	0x03
	ADDWF	FSR1L, F
	BRA	_00123_DS_
	RETURN	

; ; Starting pCode block
S_main__print	code
_print:
;	.line	201; main.c	void print(string STR){
	MOVFF	FSR2L, POSTDEC1
	MOVFF	FSR1L, FSR2L
	MOVLW	0x02
	MOVFF	PLUSW2, 0x00
	MOVLW	0x03
	MOVFF	PLUSW2, 0x01
	MOVLW	0x04
	MOVFF	PLUSW2, 0x02
_00138_DS_:
;	.line	203; main.c	while(*STR){
	MOVFF	0x00, FSR0L
	MOVFF	0x01, PRODL
	MOVF	0x02, W
	CALL	__gptrget1
	MOVWF	0x03
	MOVF	0x03, W
	BZ	_00141_DS_
_00135_DS_:
;	.line	204; main.c	while(!TXIF); //   Waits the buffer be empty.
	BTFSS	_PIR1bits, 4
	BRA	_00135_DS_
;	.line	205; main.c	TXREG=*STR;   //   Send the character
	MOVFF	0x00, FSR0L
	MOVFF	0x01, PRODL
	MOVF	0x02, W
	CALL	__gptrget1
	MOVWF	_TXREG
;	.line	206; main.c	STR++;        //   Send next char
	INCF	0x00, F
	BNC	_00138_DS_
	INFSNZ	0x01, F
	INCF	0x02, F
_00150_DS_:
	BRA	_00138_DS_
_00141_DS_:
	MOVFF	PREINC1, 0x03
	MOVFF	PREINC1, 0x02
	MOVFF	PREINC1, 0x01
	MOVFF	PREINC1, 0x00
	MOVFF	PREINC1, FSR2L
	RETURN	

; ; Starting pCode block
S_main__uart_init	code
_uart_init:
;	.line	177; main.c	void uart_init(){
	MOVFF	FSR2L, POSTDEC1
	MOVFF	FSR1L, FSR2L
;	.line	181; main.c	clrb(LATC,6);
	MOVF	_LATC, W
	MOVWF	0x00
	MOVLW	0xbf
	ANDWF	0x00, W
	MOVWF	_LATC
;	.line	182; main.c	LATC=0X00;
	CLRF	_LATC
;	.line	184; main.c	TRISC=0X80;
	MOVLW	0x80
	MOVWF	_TRISC
;	.line	186; main.c	TXSTA=0;
	CLRF	_TXSTA
;	.line	187; main.c	BAUDCON=0;
	CLRF	_BAUDCON
;	.line	189; main.c	BRGH=1;
	BSF	_TXSTAbits, 2
;	.line	190; main.c	BRG16=0;
	BCF	_BAUDCONbits, 3
;	.line	191; main.c	SPBRG=25;
	MOVLW	0x19
	MOVWF	_SPBRG
;	.line	192; main.c	SPBRGH=0;
	CLRF	_SPBRGH
;	.line	194; main.c	TXEN=1; // Ativa UART
	BSF	_TXSTAbits, 5
	MOVFF	PREINC1, 0x00
	MOVFF	PREINC1, FSR2L
	RETURN	

; ; Starting pCode block
S_main__delay1s	code
_delay1s:
;	.line	108; main.c	void delay1s(){
	MOVFF	FSR2L, POSTDEC1
	MOVFF	FSR1L, FSR2L
;	.line	114; main.c	for(cont1=3;cont1;cont1--)
	MOVLW	0x03
	MOVWF	0x00
_00113_DS_:
	MOVF	0x00, W
	BZ	_00117_DS_
;	.line	115; main.c	for(cont2=0xFF;cont2;cont2--)
	MOVLW	0xff
	MOVWF	0x01
_00109_DS_:
	MOVF	0x01, W
	BZ	_00115_DS_
;	.line	116; main.c	for(cont3=0xFF;cont3;cont3--);
	MOVLW	0xff
	MOVWF	0x02
_00105_DS_:
	MOVF	0x02, W
	BZ	_00111_DS_
	DECF	0x02, F
	BRA	_00105_DS_
_00111_DS_:
;	.line	115; main.c	for(cont2=0xFF;cont2;cont2--)
	DECF	0x01, F
	BRA	_00109_DS_
_00115_DS_:
;	.line	114; main.c	for(cont1=3;cont1;cont1--)
	DECF	0x00, F
	BRA	_00113_DS_
_00117_DS_:
	MOVFF	PREINC1, 0x02
	MOVFF	PREINC1, 0x01
	MOVFF	PREINC1, 0x00
	MOVFF	PREINC1, FSR2L
	RETURN	

; ; Starting pCode block
__str_0:
	DB	0x48, 0x6f, 0x6c, 0x61, 0x20, 0x6d, 0x75, 0x6e, 0x64, 0x6f, 0x21, 0x21
	DB	0x21, 0x00


; Statistics:
; code size:	  262 (0x0106) bytes ( 0.20%)
;           	  131 (0x0083) words
; udata size:	    0 (0x0000) bytes ( 0.00%)
; access size:	    0 (0x0000) bytes


	end
