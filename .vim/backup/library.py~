
from xml.dom import minidom





def parse_tag(filef):
	xmldoc=minidom.parse(filef)

#print xmldoc.toxml()

	grammarNode = xmldoc.firstChild
#print grammarNode.toxml()


	title_lst = xmldoc.getElementsByTagName('title') # Get title of file
	author_lst =  xmldoc.getElementsByTagName('author') # Get the author of file 
	desc_lst = xmldoc.getElementsByTagName('desc') # Get the description  
	tags_lst =  xmldoc.getElementsByTagName('tags') # Get the tag of the file 
	path_lst =  xmldoc.getElementsByTagName('path') # Get the tag of the file 
#filename_lst = xmldoc.getElementsByTagName('filename')

#----- Troubleshooting ------# 
# print title_lst[0].toxml()
# print author_lst[0].toxml()
# print desc_lst[0].toxml()
# print tags_lst[0].toxml()

	title=title_lst[0].childNodes[0].toxml(); # Get finally the title
	desc=desc_lst[0].childNodes[0].toxml(); # Get finally the description of the file
	path=path_lst[0].childNodes[0].toxml(); # Get finally the description of the file
#filename=

#     Get the tags
#
#
	tags=[];
	tglist =  xmldoc.getElementsByTagName('t'); # Get the tag of the file <t> tgname </t>

	for tg in tglist:
		tgname=tg.childNodes[0].toxml();
		tags.append(tgname);



#	Get the authors
#
#
#
	author=[]
	alist =  xmldoc.getElementsByTagName('a') # Get the authors <a> Ramirez </a>

	for ath in alist:
		aname=ath.childNodes[0].toxml()
		author.append(aname)
	
	FILETAG={'author':author,'title':title,'tags':tags,'desc':desc,'path':path}
	return FILETAG
	
	 

#############################################################################3


def print_tag(tagf):
        title=tagf["title"]
	author=tagf["author"]
	desc=tagf["desc"]
        path=tagf["path"]
        tags=tagf["tags"]


	print "Title: "+str(title)
	print "Authors:"
	for a in author:
		print " "+str(a)
	print "Description:"
	print str(desc)
	print "Tags:"
	for tg in tags:
		print " "+str(tg)
	print "Path: "+str(path)


def find_tagfiles(directory):
	import fnmatch
	import os

	matches = []
	for root, dirnames, filenames in os.walk(directory):
		  for filename in fnmatch.filter(filenames, '*.tagf'):
				matches.append(os.path.join(root, filename))
				return matches


	 


tagf=parse_tag("pdf1.tagf")
print_tag(tagf)
