/* Processador de arquivo de cabeçalho */
#define __16f877a
#include "pic/pic16f877a.h"
#include "commdefs.h"


typedef unsigned int config;


config at 0x2007 __CONFIG= 
_WDT_OFF & 
_PWRTE_ON & 
_BODEN_OFF &
_CP_OFF & 
_DEBUG_OFF & 
_HS_OSC & 
_CPD_OFF & 
_CP_OFF & 
_LVP_OFF; 



/*--------------------------------------------------------------------
 *              Declaração das funções
 *- ----------------------------------------------------------------*/

//Rotina de delay de 1 segundo
void Delay1s(void);

//Rotina de converte o digito no padrão
u8  patt7seg(u8 digit);


/*--------------------------------------------------------------------
 *                MAIN
 *
 *  Rotina principal
 *- ----------------------------------------------------------------*/

void main(){
  
        u8 count2 ;         // Contador do display de 7 segmentos

		ADCON1=0x06;		// PORTA E/S digitais, por default, são analógica	
	    CMCON=0x07;			// Desabilita comparadores analógicos
        


		TRISB0=O_ONLY;      // Apenas saída
        PORTB=0;

        while(TRUE){ // Loop infinito
            for(count2=0;count2<10;count2++){

                PORTB=patt7seg(count2);     // Acende o display de sete segmentos em PORTB
                Delay1s();                  // Intervalo de 1 segundo



            }
        }



} //end of main

/*-----------------------------------------------------------
 *
 *
 * ----------------------------------------------------------*/




//Obs.: Para clock de 4MHZ
void Delay1s(void){

		u8 count1;
		OPTION_REG=tmr0_1p32;	//Clock 1 por 32 , prescaler de 32 
		TMR0=0;					//Inicia o TMR0

		for(count1=0;count1<125;count1++) while(TMR0<250);	


} //End of Delay1s


u8 patt7seg(u8 digit){

    // Esta tabela é armazenada na memória FLASH
    static const __flash u8 lookup[10]={
   0x03,  //Digito 0
   0x06,  //Digito 1
   0x5B,  //Digito 2
   0X4F,  //Digito 3
   0x66,  //Digito 4
   0x6D,  //Digito 5
   0x7D,  //Digito 6
   0x07,  //Digito 7
   0x7F,  //Digito 8
   0x6F,  //Digito 9
   0x00   //Digito nulo,display totalmente apagado
    };

digit=lookup[digit];
return digit;

} // End of patt7seg



//static void isr(void) interrupt 0{
//
//		T0IF=0; // Limpa a flag do interrupt do Timer0
//		PORTB++; //Incrementa PORTB
//}

