/*
 * =====================================================================================
 *
 *       Filename:  index.c
 *
 *    Description:  
 *
 *        Version:  1.0
 *        Created:  01/11/2011 06:24:56 PM
 *       Revision:  none
 *       Compiler:  Nenhum
 *
 *         Author:  YOUR NAME (), 
 *        Company:  
 *
 *		Obs: Não incluir , arquivo que descreve a página principal do Doxygen,
 *		não serve para nada, mas é importante tê-lo
 *
 *
 * =====================================================================================
 */


/*! \mainpage Led Blink
 *  
 *  Objetivo: Configurar o PIC18F4550 para usar o oscilador interno a 8 MHZ.
 *Pode servir para testar o SDCC
 *
 *  Library's:
 * \li default.h
 * \li timer.h
 *
 *
 * @page configuration_bits Bits de Configuração
 *
 * @section tutorial_error_introduction Introduction
 *
 *  Os bits de configuração são essênciais ao funcionamento do microcontrolador, só podem configurados em momento de gravação,
 * podem ser definidos em código de fonte no SDCC por dois modos:
 *
 * @code
 *	
 *	__code __at __CONFIG1L conf1= __PLLDIV1 & __CPDIV ... etc
 *
 * //ou
 *
 * eeprom __at __CONFIG2L conmf2= ...
 *
 * @endcode
 *
 *
 *  * ...
 * Here is an example of use:
 *
 * @code
 
//  Opções de inicialização 

		//----- CONFIG1L Options --------------------------------------------------
#define	_PLLDIV_1_1L           0xF8    // No prescale (4 M0xz oscillator input drives PLL directly)
#define	_PLLDIV_2_1L           0xF9    // Divide by 2 (8 M0xz oscillator input)
#define	_PLLDIV_3_1L           0xFA    // Divide by 3 (12 M0xz oscillator input)
#define	_PLLDIV_4_1L           0xFB    // Divide by 4 (16 M0xz oscillator input)
#define	_PLLDIV_5_1L           0xFC    // Divide by 5 (20 M0xz oscillator input)
#define	_PLLDIV_6_1L           0xFD    // Divide by 6 (24 M0xz oscillator input)
#define	_PLLDIV_10_1L          0xFE    // Divide by 10 (40 M0xz oscillator input)
#define	_PLLDIV_12_1L          0xFF    // Divide by 12 (48 M0xz oscillator input)

#define	_CPUDIV_OSC1_PLL2_1L   0xE7    // [OSC1/OSC2 Src: /1][96 M0xz PLL Src: /2]
#define	_CPUDIV_OSC2_PLL3_1L   0xEF    // [OSC1/OSC2 Src: /2][96 M0xz PLL Src: /3]
#define	_CPUDIV_OSC3_PLL4_1L   0xF7    // [OSC1/OSC2 Src: /3][96 M0xz PLL Src: /4]
#define	_CPUDIV_OSC4_PLL6_1L   0xFF    // [OSC1/OSC2 Src: /4][96 M0xz PLL Src: /6]

#define	_USBDIV_1_1L           0xDF    // USB clock source comes directly from t0xe primary oscillator block wit0x no postscale
#define	_USBDIV_2_1L           0xFF    // USB clock source comes from t0xe 96 M0xz PLL divided by 2

		//----- CONFIG10x Options --------------------------------------------------
#define	_FOSC_XT_XT_10x         0xF0    // XT oscillator, XT used by USB
#define	_FOSC_XTPLL_XT_10x      0xF2    // XT oscillator, PLL enabled, XT used by USB
#define	_FOSC_ECIO_EC_10x       0xF4    // External clock, port function on RA6, EC used by USB
#define	_FOSC_EC_EC_10x         0xF5    // External clock, CLKOUT on RA6, EC used by USB
#define	_FOSC_ECPLLIO_EC_10x    0xF6    // External clock, PLL enabled, port function on RA6, EC used by USB
#define	_FOSC_ECPLL_EC_10x      0xF7    // External clock, PLL enabled, CLKOUT on RA6, EC used by USB
#define	_FOSC_INTOSCIO_EC_10x   0xF8    // Internal oscillator, port function on RA6, EC used by USB
#define	_FOSC_INTOSC_EC_10x     0xF9    // Internal oscillator, CLKOUT on RA6, EC used by USB
#define	_FOSC_INTOSC_XT_10x     0xFA    // Internal oscillator, XT used by USB
#define	_FOSC_INTOSC_0xS_10x     0xFB    // Internal oscillator, 0xS used by USB
#define	_FOSC_0xS_10x            0xFC    // 0xS oscillator, 0xS used by USB
#define	_FOSC_0xSPLL_0xS_10x      0xFE    // 0xS oscillator, PLL enabled, 0xS used by USB

#define	_FCMEN_OFF_10x          0xBF    // Fail-Safe Clock Monitor disabled
#define	_FCMEN_ON_10x           0xFF    // Fail-Safe Clock Monitor enabled

#define	_IESO_OFF_10x           0x7F    // Oscillator Switc0xover mode disabled
#define	_IESO_ON_10x            0xFF    // Oscillator Switc0xover mode enabled

		//----- CONFIG2L Options --------------------------------------------------
#define	_PWRT_ON_2L            0xFE    // PWRT enabled
#define	_PWRT_OFF_2L           0xFF    // PWRT disabled

#define	_BOR_OFF_2L            0xF9    // Brown-out Reset disabled in 0xardware and software
#define	_BOR_SOFT_2L           0xFB    // Brown-out Reset enabled and controlled by software (SBOREN is enabled)
#define	_BOR_ON_ACTIVE_2L      0xFD    // Brown-out Reset enabled in 0xardware only and disabled in Sleep mode (SBOREN is disabled)
#define	_BOR_ON_2L             0xFF    // Brown-out Reset enabled in 0xardware only (SBOREN is disabled)

#define	_BORV_0_2L             0xE7    // Maximum setting
#define	_BORV_1_2L             0xEF    // 
#define	_BORV_2_2L             0xF7    // 
#define	_BORV_3_2L             0xFF    // Minimum setting

#define	_VREGEN_OFF_2L         0xDF    // USB voltage regulator disabled
#define	_VREGEN_ON_2L          0xFF    // USB voltage regulator enabled

		//----- CONFIG20x Options --------------------------------------------------
#define	_WDT_OFF_20x            0xFE    // 0xW Disabled - SW Controlled
#define	_WDT_ON_20x             0xFF    // 0xW Enabled - SW Disabled

#define	_WDTPS_1_20x            0xE1    // 1:1
#define	_WDTPS_2_20x            0xE3    // 1:2
#define	_WDTPS_4_20x            0xE5    // 1:4
#define	_WDTPS_8_20x            0xE7    // 1:8
#define	_WDTPS_16_20x           0xE9    // 1:16
#define	_WDTPS_32_20x           0xEB    // 1:32
#define	_WDTPS_64_20x           0xED    // 1:64
#define	_WDTPS_128_20x          0xEF    // 1:128
#define	_WDTPS_256_20x          0xF1    // 1:256
#define	_WDTPS_512_20x          0xF3    // 1:512
#define	_WDTPS_1024_20x         0xF5    // 1:1024
#define	_WDTPS_2048_20x         0xF7    // 1:2048
#define	_WDTPS_4096_20x         0xF9    // 1:4096
#define	_WDTPS_8192_20x         0xFB    // 1:8192
#define	_WDTPS_16384_20x        0xFD    // 1:16384
#define	_WDTPS_32768_20x        0xFF    // 1:32768

//----- CONFIG30x Options --------------------------------------------------
#define	_MCLRE_OFF_30x          0x7F    // RE3 input pin enabled// MCLR disabled
#define	_MCLRE_ON_30x           0xFF    // MCLR pin enabled// RE3 input pin disabled

#define	_LPT1OSC_OFF_30x        0xFB    // Timer1 configured for 0xig0xer power operation
#define	_LPT1OSC_ON_30x         0xFF    // Timer1 configured for low-power operation

#define	_PBADEN_OFF_30x         0xFD    // PORTB<4:0> pins are configured as digital I/O on Reset
#define	_PBADEN_ON_30x          0xFF    // PORTB<4:0> pins are configured as analog input c0xannels on Reset

#define	_CCP2MX_OFF_30x         0xFE    // CCP2 input/output is multiplexed wit0x RB3
#define	_CCP2MX_ON_30x          0xFF    // CCP2 input/output is multiplexed wit0x RC1

//----- CONFIG4L Options --------------------------------------------------
#define	_STVREN_OFF_4L         0xFE    // Stack full/underflow will not cause Reset
#define	_STVREN_ON_4L          0xFF    // Stack full/underflow will cause Reset

#define	_LVP_OFF_4L            0xFB    // Single-Supply ICSP disabled
#define	_LVP_ON_4L             0xFF    // Single-Supply ICSP enabled

#define	_ICPRT_OFF_4L          0xDF    // ICPORT disabled
#define	_ICPRT_ON_4L           0xFF    // ICPORT enabled

#define	_XINST_OFF_4L          0xBF    // Instruction set extension and Indexed Addressing mode disabled (Legacy mode)
#define	_XINST_ON_4L           0xFF    // Instruction set extension and Indexed Addressing mode enabled

#define	_DEBUG_ON_4L           0x7F    // Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
#define	_DEBUG_OFF_4L          0xFF    // Background debugger disabled, RB6 and RB7 configured as general purpose I/O pins

//----- CONFIG5L Options --------------------------------------------------
#define	_CP0_ON_5L             0xFE    // Block 0 (000800-001FFF0x) code-protected
#define	_CP0_OFF_5L            0xFF    // Block 0 (000800-001FFF0x) not code-protected

#define	_CP1_ON_5L             0xFD    // Block 1 (002000-003FFF0x) code-protected
#define	_CP1_OFF_5L            0xFF    // Block 1 (002000-003FFF0x) not code-protected

#define	_CP2_ON_5L             0xFB    // Block 2 (004000-005FFF0x) code-protected
#define	_CP2_OFF_5L            0xFF    // Block 2 (004000-005FFF0x) not code-protected

#define	_CP3_ON_5L             0xF7    // Block 3 (006000-007FFF0x) code-protected
#define	_CP3_OFF_5L            0xFF    // Block 3 (006000-007FFF0x) not code-protected

//----- CONFIG50x Options --------------------------------------------------
#define	_CPB_ON_50x             0xBF    // Boot block (000000-0007FF0x) code-protected
#define	_CPB_OFF_50x            0xFF    // Boot block (000000-0007FF0x) not code-protected

#define	_CPD_ON_50x             0x7F    // Data EEPROM code-protected
#define	_CPD_OFF_50x            0xFF    // Data EEPROM not code-protected

//----- CONFIG6L Options --------------------------------------------------
#define	_WRT0_ON_6L            0xFE    // Block 0 (000800-001FFF0x) write-protected
#define	_WRT0_OFF_6L           0xFF    // Block 0 (000800-001FFF0x) not write-protected

#define	_WRT1_ON_6L            0xFD    // Block 1 (002000-003FFF0x) write-protected
#define	_WRT1_OFF_6L           0xFF    // Block 1 (002000-003FFF0x) not write-protected

#define	_WRT2_ON_6L            0xFB    // Block 2 (004000-005FFF0x) write-protected
#define	_WRT2_OFF_6L           0xFF    // Block 2 (004000-005FFF0x) not write-protected

#define	_WRT3_ON_6L            0xF7    // Block 3 (006000-007FFF0x) write-protected
#define	_WRT3_OFF_6L           0xFF    // Block 3 (006000-007FFF0x) not write-protected

//----- CONFIG60x Options --------------------------------------------------
#define	_WRTB_ON_60x            0xBF    // Boot block (000000-0007FF0x) write-protected
#define	_WRTB_OFF_60x           0xFF    // Boot block (000000-0007FF0x) not write-protected

#define	_WRTC_ON_60x            0xDF    // Configuration registers (300000-3000FF0x) write-protected
#define	_WRTC_OFF_60x           0xFF    // Configuration registers (300000-3000FF0x) not write-protected

#define	_WRTD_ON_60x            0x7F    // Data EEPROM write-protected
#define	_WRTD_OFF_60x           0xFF    // Data EEPROM not write-protected

//----- CONFIG7L Options --------------------------------------------------
#define	_EBTR0_ON_7L           0xFE    // Block 0 (000800-001FFF0x) protected from table reads executed in ot0xer blocks
#define	_EBTR0_OFF_7L          0xFF    // Block 0 (000800-001FFF0x) not protected from table reads executed in ot0xer blocks

#define	_EBTR1_ON_7L           0xFD    // Block 1 (002000-003FFF0x) protected from table reads executed in ot0xer blocks
#define	_EBTR1_OFF_7L          0xFF    // Block 1 (002000-003FFF0x) not protected from table reads executed in ot0xer blocks

#define	_EBTR2_ON_7L           0xFB    // Block 2 (004000-005FFF0x) protected from table reads executed in ot0xer blocks
#define	_EBTR2_OFF_7L          0xFF    // Block 2 (004000-005FFF0x) not protected from table reads executed in ot0xer blocks

#define	_EBTR3_ON_7L           0xF7    // Block 3 (006000-007FFF0x) protected from table reads executed in ot0xer blocks
#define	_EBTR3_OFF_7L          0xFF    // Block 3 (006000-007FFF0x) not protected from table reads executed in ot0xer blocks

//----- CONFIG70x Options --------------------------------------------------
#define	_EBTRB_ON_70x           0xBF    // Boot block (000000-0007FF0x) protected from table reads executed in ot0xer blocks
#define	_EBTRB_OFF_70x          0xFF    // Boot block (000000-0007FF0x) not protected from table reads executed in ot0xer blocks

 
 * @endcode
 *
 *
 */


// Inserir imagem
 // <img src="../pwm-flow.jpeg" alt="Screenshot">

// Fórmula do latex
 //  \f$ \sqrt{x^2 + y^2} \f$



