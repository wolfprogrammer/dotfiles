#ifndef	_commdefs_h_
#define _commdefs_h_

#ifdef __16f877a		/** O código  apartir daqui é somente para o pic 16f877a*/

#define LowiNibbles(X)	(X)&0b00001111
#define HigNibbles(X)	(X)>>4

// Seta/Ativa o bit de ordem n , 0:LSB
#define setBit(file,n)  (file)|=(1<<(n))

// Limpa/Desativa o bit de ordem n , 0:LSB
#define clearBit(file,n) (file)&=~(1<<(n)


//	Mensagem de erro
#warning	"Still in development.For now only works for PIC16F877A"



#define C99_2

//C99 standard data types
#ifdef C99_1
	//Unsigned =>Sem sinal
	#define uint8 	unsigned char
	#define uint16	unsigned int
	#define uint32	long
	
	//Signed =>Com sinal
	#define int8	signed char
	#define int16	signed int
	#define int32 signed long
#endif

//C99 standard data types second form
#ifdef C99_2
	#define u8  unsigned char
	#define u16 unsigned int
	#define u32 long
	#define i8	signed char
	#define i16 signed int
	#define i32 signed long
#endif

//Logical defines
#define  TRUE   1
#define  FALSE  0
#define  true   TRUE
#define  false  FALSE


// Common bit define
#define ON    1			// Ligado
#define OFF   0			// Desligado
#define HIGH  1			//Nível alto
#define LOW	  0			//Nível baixo


//	For u8 , types
#define LSB 0			// Least significative bit: Bit menos significativo
#define MSB 7			// Most significative bit: Bit mais significativo


// TRIS bits configurations
#define ONLY_I	0xFF		// Only Input 	: Somente entrada
#define ONLY_O	0x00		// only Output 	: Somente saída



/*
typedef union {
	struct {
			u8	b0:1;
			u8	b1:1;
			u8	b2:1;
			u8	b3:1;
			u8	b4:1;
			u8	b5:1; 
			u8	b6:1;
			u8	b7:1;
	};
}	bitfield ;
// Uso	 bitfield flags
// flags.b0=1
// flags.b1=0
//
*/


#endif /* Fim do código para o pic16f877a*/
/*******************************************************************************/

#endif  // commdefs_h
