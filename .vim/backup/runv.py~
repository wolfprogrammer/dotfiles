#!/usr/bin/env python
import sys
import re  # importa regex

sys.path.append("/home/caio/works/modules")

if len(sys.argv) != 2: 
	print " runv= run-verbose"   
	  #      Roda cada linha de uma arquivo python ,               
	  #      se um expressao e encontrada ,imprime seu             
	  #      resultado. Executa um scrit de modo similar ao        
	  #      matlab.                                               
	  #      Todas variaveis sao armazenadas na variavel global    
	  #      varlist"

	sys.exit("Deve entrar com o caminho do codigo python a rodar")

global  varlist
varlist=[]

#file_name="bernoulli1.py"
file_name=sys.argv[1]

fname=open(file_name,"r")
lines=fname.readlines()

def listvars():
	for v in varlist:
		print "%s =%s" % (v,str(eval(v)))


def process_str(expr1):
        patt1="[A-Za-z0-9]+=" 	# encontra expressao   "ab="
	patt2="[A-Za-z0-9]+"     # encontra ab
	patt1=re.compile(patt1)
	patt2=re.compile(patt2)

	expr2=expr1[:-1]   # Remove o ultimo caracter da linha do codigo \n (newline)
	print expr2 
        #  Se encontrou expressao numerica
	#executa este codigo e imprime o resultado
	#
	if patt1.match(expr2)!=None:
		#print "ok"
		str1=patt1.findall(expr2)
		#print str1
		str1=str1[0]
		varr=patt2.findall(str1)
		varr=varr[0]
		#print varr
		#print expr2
		exec("print %s" % varr)
		print "\n"
		varlist.append(varr)
	 


for line in lines:
	exec(line)		#executa a string como comando do python
	process_str(line)       # processa linha



 

fname.close()
