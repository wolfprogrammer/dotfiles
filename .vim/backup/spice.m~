## Copyright (C) 2012 caio
## 
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with Octave; see the file COPYING.  If not, see
## <http://www.gnu.org/licenses/>.

## spice

## Author: caio <caio@ghost1>
## Created: 2012-10-21

fid=fopen('simu.raw','r')

header = '';
line = fgets(fid); % fgets reads a line but keeps newline characters.
while isempty(strfind(line, 'Binary:'))
    line = fgets(fid);
    header = [header, line];
end



% Parse the header.
datetext = char(regexp(header, '^Date:\s*(\w.*?\w)\s*$', 'tokens', 'once', 'lineanchors'));
data.date = datestr(datenum(datetext, 'ddd mmm dd HH:MM:SS  yyyy')); % Converts the date to a MATLAB date.
data.plotname = char(regexp(header, '^Plotname:\s*(\w.*?\w)\s*$', 'tokens', 'once', 'lineanchors'));
data.flags = char(regexp(header, '^Flags:\s*(\w.*?\w)\s*$', 'tokens', 'once', 'lineanchors'));
numVariables = str2num(char(regexp(header, '^No\. Variables:\s*(\d+)\s*$', 'tokens', 'once', 'lineanchors')));
numPoints = str2num(char(regexp(header, '^No\. Points:\s*(\d+)\s*$', 'tokens', 'once', 'lineanchors')));
vartext = char(regexp(header, '^Variables:\s*$(.*)^Binary:', 'tokens', 'once', 'lineanchors'));
variables = regexp(vartext, '^\s*(?<num>\d+)\s+(?<name>\S+)\s+(?<type>.*?)\s*$', 'names', 'lineanchors');

% Check for errors.
if numVariables < 1
    fclose(fid);
    error('The RAW file:\n\t%s\ncontains no variables.', rawfilename);
end
if numVariables ~= numel(variables.num)
    fclose(fid);
    error('Was expecting %d variables, but found %d in RAW file:\n\t%s', numVariables, numel(variables));
end
if numPoints < 1
    fclose(fid);
    error('The RAW file:\n\t%s\ncontains no points.', rawfilename);
end

% Get the list of variable names. These are probably invavlid as MATLAB
% variable names.
invalid_variable_names = {variables.name};


% Read the binary part of the file.
data_matrix = zeros(numVariables, numPoints);
for col=1:numPoints
	for var=1:numVariables
       % Read one value from the binary part of the file.
        [value, count] = fread(fid, 1, 'double');
        % Check that the value was read okay.
        if count == 0
            warning('No data found for variable %d column %d.', var, col);
        else
            % Copy the value into the data matrix.
        	data_matrix(var,col) = value;
        end
	end
end

% Check that there is no 'leftover' data.
   
% Close and delete (!) the RAW file
fclose(fid);

valid_variable_names=s;

% Copy data into a structure.
for n = 1:numVariables
    data = setfield(data, valid_variable_names{n}, data_matrix(n,:));
end




fclose(fid)
