/*--------------------------------------------------------------
                main.c
  
PIC16F877A 4MHZ Clock

Caio Rodrigues Soares Silva



Thanks very much Brahm Moolenar... it's a very good text editor.

--------------------------------------------------------------*/


/* Processador de arquivo de cabeçalho */

#define clock4mhz
#define __16f877a

#include "pic/pic16f877a.h"
#include "commdefs.h"
#include "delay.h"
//#include "pwm.h"
//#include "adc.h"


typedef unsigned int config;


config at 0x2007 __CONFIG= 
_WDT_OFF &		// Sem Watch dog timer 
_PWRTE_ON & 	// Com Power-On Reset
_BODEN_OFF &	// Com
_CP_OFF & 	    // Sem proteção do código
_DEBUG_OFF & 	// Sem debugger
_HS_OSC & 		// Oscilador cristal 4 MHZ
_CPD_OFF & 		//
_LVP_OFF; 		// Sem LVP:Low Voltage Programmming


//#define debug1



#define tmr2_1b1      0x00
#define tmr2_1b4      0x01
#define tmr2_1b16     0x02
#define tmr2_on		  0x04

#define PWM_ON		0x0C   //Turn On  PWM channel1
#define PWM_OFF		0x00



#define ticks 249
#define duty_cycle 500


// Rotinas par o gerador PWM interno do MCU
// RC2/CCP1
//
//
//



// 		duty_cycle é um valor de 10 bits, até 1024
//
//



//void SetPWM1freq(u8 ticks,u8 PRESC);
//void setPwm1_dcy(u16 DutyCycle);


void main(){

		CMCON=7;		  // Desabilita comparadores analógicos
		ADCON0=6;		  // Todas entradas analógicas desabilitadas
		INTCON=0;		  //Sem interrupção


#ifndef debug1
	
    	T2CON  =0x04 | tmr2_1b4 ; //Turn on TIMER2 on prescaler 4 and set timer2
		
		//		Tclock=4MHZ  Tpwm= 1KHZ
		//	PR2=Tpwm/(4*Tosc*PRESC2)-1= 249
		//
		//	

	
		TMR2=ticks;			 //PR2=TMR2
		RC2=0;
    	TRISC2=0;            //Configura TRISC2 como saída

		
		//	Duty Cicle de 50% Tensão de saída 2.5 V
		//
		//
		
			CCPR1L=duty_cycle>>2;						// Set MSB values tag1
			CCP1CON|=(duty_cycle & 0x03)<<4 | PWM_ON;		// Set Duty cycle and start PWM mode bits tag2





		TRISB=0;

		while(1){/*Loop Para sempre*/
		//Tudo aceso
		PORTB=0xFF;
				}
#else
//------------------------------------------------------------
		// Código alternativo de teste

		TRISB=0;
		TRISA=0;

aaa
		while(1){
		PORTB=0;
		PORTA=0;
		
		};

#endif // FIM do código alternativo de teste



} //end of main

/*----------------------------------------------------------*/





/*------------------------------------------------------------------
 ---------------------  END OF FILE --------------------------------
 ------------------------------------------------------------------*/
