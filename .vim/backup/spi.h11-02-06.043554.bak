/*
 * =====================================================================================
 *
 *       Filename:  spi.h
 *
 *    Description:  Rotinas de SPI para o PIC16F877A
 *
 *        Version:  1.0
 *        Created:  02/06/2011 03:31:44 AM
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  YOUR NAME (), 
 *        Company:  
 *
 * =====================================================================================
 */

#ifndef _spi_h_
#define _spi_h_

#include "default.h"


#include "pic16f877a.h"



					/* Configuration constants */


// SSPSTAT<7>=SMP
#define spi_master	bit7
#define spi_slave	~bit7


//  SSPCON1<SSPM3:SSPM0>
#define SPI_master_clock_FOSC4		0x00
#define SPI_master_clock_FOSC16		0x01
#define SPI_master_clock_FOSC64		0x02
#define SPI_slave_SSdisabled		0x05
#define SPI_slave_SSenabled			0x04


// SSPEN : Synchronous Serial Port Enable Bit
#define SPI_ON				bit5
#define SPI_OFF				~bit5

// Clock Polarity and Clock Phase
#define mode_00
#define mode_01
#define mode_10
#define mode_11



					/* Routines protytipes*/


//	Start SPI operation
//
void open_spi_master(u8 mode){             // master or slave
			  //u8 modn ){			// clock_mode

        

		SSPCON1=0x00;
		SSPCON1|=mode|SPI_ON;

				
		CKE=0; 	// Transmit occurs on trasition from active to idle clock state
		CKP=0;	// Transmir occurs on Transmir from idle to active clock state

		SMP=1; // Input data sampled at middle of data output time

			 
	    			  		       // SDO: set TRISC<5> clear (master) , SCK set TRISC<3>,  
		TRISC|= ~bit5 |	\
				~bit3 |	\	   		// SS: set TRISC<4>
				 bit4;



}  /* open_spi_master */ 



extern u8 ReadSPI(void);
extern u8 getcSPI(void);


#endif  /* spi.h */
