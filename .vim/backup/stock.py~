#!/usr/bin/python


from ipdb import set_trace as DEBUG
from string import atof
from pylab import *


"""
Module stocks.py

Gets finantial data from BOVESPA stock exchange from
Yhaoo Finance like:

-Stocks
-Indexes
-Currency


"""

__author__ = "Caio Rodrigues"
__license__= "GPL"
__maintainer__= "Caio"
__email__= "caiorss.rodrigues@gmail.com"
__status__= "production"


#---------------------------------------------------------------------------------------#
#	REFERENCIAS                                                                     #
#                                                                                       #
#   http://www.traineetrader.com/importing-stock-data-from-yahoo-using-python/          #
#   http://www.gummy-stuff.org/Yahoo-data.htm                                           #
#   http://finance.yahoo.com/exchanges i                                                #
#   http://www.traineetrader.com/importing-stock-data-from-yahoo-using-python/		#
#											#
#                                                                                       #
#---------------------------------------------------------------------------------------#

import urllib
from time import sleep

def get_stock(symbol,debug=0):
	"""
	get_stock(symbol,debug=0)

	Obtem dadados de acoes da BOVESPA ou outras bolsas de valores
	pelo Yahoo  Financas 

	Parametros
	--------------------------------------------------------------
	symbol:      Simbolo da acao da empresa ex.:  PETR4 SA
	debug=0:     Se sim mostra os processamento.


        Retorno
	--------------------------------------------------------------

	Dicionario data:

        data['price'] = values[0]
	data['change'] = values[1]
	data['volume'] = values[2]
	data['avg_daily_volume'] = values[3]
	data['stock_exchange'] = values[4]
	data['market_cap'] = values[5]
	data['book_value'] = values[6]
	data['ebitda'] = values[7]
	data['dividend_per_share'] = values[8]
	data['dividend_yield'] = values[9]
	data['earnings_per_share'] = values[10]
	data['52_week_high'] = values[11]
	data['52_week_low'] = values[12]
	data['50day_moving_avg'] = values[13]
	data['200day_moving_avg'] = values[14]
	data['price_earnings_ratio'] = values[15]
	data['price_earnings_growth_ratio'] = values[16]
	data['price_sales_ratio'] = values[17]
	data['price_book_ratio'] = values[18]
	data['short_ratio'] = values[19]

        data['open'] =values[20]
	data['name'] =values[21]
	data['previous_close']=values[22]
	data['annualized_gain']=values[23]
        data['average_day_volume']=values[24]
	data['last_trade_date']=values[25]
	data['change_real_time']=values[26]
         

	"""
	
	#conf="a"+"o"+"b4"+"d2"+"a2"+"b2"+"i"+"l"+"l1"+"p"+"n4"+"s"+"v"+"x"
	#conf2="abb4c1c8d2e7f6jgg6j1j5k2k5l2m2m5m8op2qr2r7s7t7v1w1ya2b2b6c3dee8gkg4ij3j6k3ll3m3m6npp5rr5st1t8v7w4a5b3cc6d1e1e9hg1g5i5j4k1k4l1mm4m7n4p1p6r1r6s1t6vwx"

	conf= 'l1c1va2xj1b4j4dyekjm3m4rr5p5p6s7onpg3a2d1c6'
	
	url="http://finance.yahoo.com/d/quotes.csv?s="+symbol+"&f="+conf
	values_=urllib.urlopen(url).read().strip().strip('"')
	values=values_.split(',')  
	
	data = {}
	data['price'] = values[0]
	data['change'] = values[1]
	data['volume'] = values[2]
	data['avg_daily_volume'] = values[3]
	data['stock_exchange'] = values[4]
	data['market_cap'] = values[5]
	data['book_value'] = values[6]
	data['ebitda'] = values[7]
	data['dividend_per_share'] = values[8]
	data['dividend_yield'] = values[9]
	data['earnings_per_share'] = values[10]
	data['52_week_high'] = values[11]
	data['52_week_low'] = values[12]
	data['50day_moving_avg'] = values[13]
	data['200day_moving_avg'] = values[14]
	data['price_earnings_ratio'] = values[15]
	data['price_earnings_growth_ratio'] = values[16]
	data['price_sales_ratio'] = values[17]
	data['price_book_ratio'] = values[18]
	data['short_ratio'] = values[19]

        data['open'] =values[20]
	data['name'] =values[21]
	data['previous_close']=values[22]
	data['annualized_gain']=values[23]
        data['average_day_volume']=values[24]
	data['last_trade_date']=values[25]
	data['change_real_time']=values[26]

	return data


	print "---------"
        print data

	if debug==1:
		print url
		print values_
		print values

	return data




def get_portfolio(PORTFOLIO):

	print "PORTIFOLIO:\n\n"
	
	for symbol in PORTFOLIO:
		data=get_stock(symbol)
                print symbol
		print data['name']
		print "Fechameto previo :\t"  +  data['previous_close']
		print "Abertura:\t"  + data['open']
		print "Volume:\t"  +  data['volume']
		print "Dividendos:\t" + data['dividend_yield']
		print "Variacao:\t" + data['change']
		print "Variacao(tempo real):\t"+data['change_real_time']

		print "-----------------\n\n"


def get_histprices(symbol,start_date,end_date):
	"""
	Get historical price

        ddmmaaaa

	"""

	#start_date=str(start_date)
	#end_date=str(end_date)

	d1=start_date[0:2]
	m1=start_date[2:4]
	y1=start_date[4:]

        d2=end_date[0:2]
	m2=end_date[2:4]
	y2=end_date[4:]
         

	
	url1="http://ichart.finance.yahoo.com/table.csv?s="+ symbol 
	url2="&a=" + m1 + "&b=" + d1 + "&c=" +y1 + "+" 
        url3="&d="+ m2 + "&e=" + d2 + "&f=" + y2 + "+&g=d&ignore=.csv"
	url=url1+url2+url3

	print url1
	print url2
	print url3

       # DEBUG()
        
	# Date,Open,High,Low,Close,Volume,Adj Close
 	values=urllib.urlopen(url).readlines()
	days=values[1:] 


	day=[day[:-2].split(",") for day in days]
	day.reverse()

        #return day
        data={}
	data['date']=[]
	data['open']=[]
	data['high']=[]
	data['low']=[]
	data['close']=[]
	data['volume']=[]
	data['adj_close']=[]

	#DEBUG()
        for dd in day:
		data['date'].append(dd[0])
		data['open'].append(atof(dd[1])) 
		data['high'].append(atof(dd[2])) 
		data['low'].append(atof(dd[3])) 
		data['close'].append(atof(dd[4])) 
		data['volume'].append(atof(dd[5])) 
		data['adj_close'].append(atof(dd[6]))
	

	data['open']=array(data['open'])
	data['high']=array(data['high']) 
	data['low']=array(data['low']) 
	data['close']=array(data['close']) 
	data['volume']=array(data['volume']) 
	data['adj_close']=array(data['adj_close']) 

	return data

        #DEBUG()

	#values=values_.split(',')  

        

	#print values
 

def plot_hist(symbol):
        data=get_histprices(symbol,"01011980","01012012")
	
	date=data['date']
	Open=data['open']
	Close=data['close']

	#DEBUG()
	Size=Open.size
	last=Size-1
	

	plot(Open)
	title(symbol)

	print "Max open $%f"  % Open.max()
	print "Min open  $%f" %  Open.min()
	print "Mean open $%f" % Open.mean()
	print "Curr open $%f" % Open[last]
	print date[0]
	print date[last]







                                                    


#------------------------------------------------------#
#          FIM DAS FUNCOES                             #
#------------------------------------------------------#

def main():
	# Acoes
	STOCKS = ["PETR4.SA" , "VALE5.SA" , "USIM5.SA" ,"ELPL4.SA", "PETR3.SA"]

	# Indices
	INDEXES = ["^BVSP","^IEE" ]

	# MOEDAS
	CURRENCY = ["USDBRL=X","GBPBRL=X"]

#	print "Portfolio:"
#	get_portfolio(STOCKS)

#	print "Indices: "
#	get_portfolio(INDEXES)

#	print "Cotacoes de Moedas: "
#	get_portfolio(CURRENCY)



if __name__=="__main__":
	main()


#while True:
#	get_portfolio(PORTFOLIO)
#	sleep(15*60)  # Dorme por 15 minuto 
#	print "====================================="
