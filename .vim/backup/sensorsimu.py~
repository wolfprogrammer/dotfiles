
from pylab import *
from ipdb import set_trace as debug

"""
Simular sensores e conversores analogicos 
digitais

DEBUG: Flag
"""
DEBUG=0
FORMAT="%.4f"

def ptable(table_values):

	tab=array(table_values)
	tab=tab.transpose()
	#print tab

	for line in tab:
		L=""
		for el in line:
			#debug()
			L=L+ "%f\t" % round(el,3)
		print L
			


		




                         
#==========================#
# 	Constantes         #
#==========================#






#==========================#
# 	Constantes  de Configuracao       #
#==========================#

# Time factors
us=1.0e-6 # sconds
ms=1.0e-3
s= 1.0

# ADC bits
ADC08bits=2**8
ADC10bits=2**10
ADC12bits=2**12
ADC16bits=2**16
ADC24bits=2**24

# Reference voltages
Vref2=5.0  # Volts 
Vref1=0.5  # Volts


# Sensor data
inputsignal="Temperature"
inputunit="C deg"
# Span
O2=  1000.0 # C
O1= 100.0 # C
# Sensitivity
S=0.005  # Volts/C
# Zero Voltage (Zero voltage)
Voffset=0.0 # Volts
# Range
RANGE=O2-O1

#==========================#
# 	Calculos	   #
#==========================#

if DEBUG==1:
	debug()

# Sampling time
Tsampling=100*us
 
ADC=ADC12bits
ADCmax=ADC-1
ADC_resolution=(Vref2-Vref1)/ADC   # volts/bit


ADCvalue=around(linspace(0,ADCmax,20))
ADCvalue=int_(ADCvalue)

dV=ADCvalue*(Vref2-Vref1)/ADCmax
V=dV+Vref1

# Output signal temperature
O=O1+(V-Voffset)/S
 
Vmax=Voffset+S*(O2-O1)
Vmin=Voffset




 
print "ADCdata"
print "ADC 12 bits"
print "ADCmax=",ADCmax
print "Vref2=",Vref2
print "Vref1=",Vref1
print "ADC_resolution %.5f [Volts/bit]" % ADC_resolution
print "\n-------------\n"
print "Sensor data"
print "Input signal =",inputsignal
print "Sensor unit =",inputunit
print "Max Span : O2",O2
print "Min Span : O1",O1
print "Sensitivity S=",S
print "Range :",RANGE
print "Vmax=Voffset+S*(O2-O1)=",Vmax
print "Vmin=Voffset=",Vmin


table_name= [ "ADCValue","Volt","Sensor Output"]

print "\n\n"
print "ADCValue\tVolt\tMeasurement"
ptable([ ADCvalue , V , O])

#ptable([[1,2,3],[3.5,8.5,9.8],[29.5,34.67453,9.9767]])



